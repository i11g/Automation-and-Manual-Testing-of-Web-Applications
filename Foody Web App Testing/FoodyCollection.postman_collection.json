{
	"info": {
		"_postman_id": "73014b2b-edcb-44b0-aedc-b9317ef3e28e",
		"name": "Foody Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28665653"
	},
	"item": [
		{
			"name": "Login and Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set('accessToken', responseData.accessToken)\r",
							"\r",
							"pm.test(\"Response body has the correct properties\",function () \r",
							"{\r",
							"    pm.expect(responseData).to.have.property(\"username\");\r",
							"    pm.expect(responseData).to.have.property(\"password\");\r",
							"    pm.expect(responseData).to.have.property(\"accessToken\");\r",
							"})\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userName\": \"ivan111\",\r\n    \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/User/Authentication",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"User",
						"Authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Food",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 201', () => {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"\r",
							"const responseData=pm.response.json()\r",
							"\r",
							"pm.test(\"Response contains foodId\", function() {\r",
							"    pm.expect(responseData).to.have.property(\"foodId\")\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"foodId\", responseData.foodId)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const food=[\"pizza\",\"bread\",\"cheese\", \"cookees\"]\r",
							"const randomIndex=Math.floor((Math.random())*3)\r",
							"const randomFoodName=food[randomIndex]\r",
							"\r",
							"const randomNumber=Math.floor(Math.random()*1000)\r",
							"\r",
							"const randomFood=randomFoodName+ \" \" + (randomNumber)\r",
							"console.log(randomFood);  \r",
							"\r",
							"pm.collectionVariables.set(\"randomFood\", randomFood)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{randomFood}}\",\r\n    \"description\": \"Very nice food\",\r\n    \"url\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Food by Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"const randomFood=pm.collectionVariables.get(\"randomFood\")\r",
							"\r",
							"pm.test('The response is an array', function () {\r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"})\r",
							"\r",
							"pm.test('Response food is correct', function () {\r",
							"    pm.expect(responseData[0].name).to.eql(randomFood);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/Food/Search?keyword={{randomFood}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Search"
					],
					"query": [
						{
							"key": "keyword",
							"value": "{{randomFood}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit the Name of the Food that you Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseData=pm.response.json() \r",
							"\r",
							"pm.test(\"Response contains Successfully edited message\",function() {\r",
							"    pm.expect(responseData.msg).to.contain(\"Successfully edited\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"path\": \"/name\",\r\n        \"op\": \"replace\",\r\n        \"value\": \"Edited title\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Edit/:foodId ",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Edit",
						":foodId "
					],
					"variable": [
						{
							"key": "foodId ",
							"value": "{{foodId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Edited Food",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function() {\r",
							"     pm.response.to.have.status(200)\r",
							"}) \r",
							"\r",
							"const responseData=pm.response.json() \r",
							"\r",
							"pm.test(\"Response message to contain Deleted successfully!\", function(){\r",
							"    pm.expect(responseData.msg).to.include(\"Deleted successfully!\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/Food/Delete/:foodId",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Delete",
						":foodId"
					],
					"variable": [
						{
							"key": "foodId",
							"value": "{{foodId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://softuni-qa-loadbalancer-2137572849.eu-north-1.elb.amazonaws.com:86  ",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "randomFood",
			"value": ""
		},
		{
			"key": "foodId",
			"value": ""
		}
	]
}